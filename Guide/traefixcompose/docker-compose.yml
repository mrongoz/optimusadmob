version: '3.6'

services:
  traefik:
    image: traefik
    network_mode: bridge
    command: >
      --api \
      --docker --docker.watch --docker.domain=docker.localhost \
      --ping --ping.entryPoint=http \
      --metrics.prometheus \
      --entrypoints='Name:http Address::80 Redirect.EntryPoint:https' \
      --entryPoints='Name:https Address::443 TLS' \
      --acme \
      --acme.acmelogging \
      --acme.caserver=${LETS_ENCRYPT_ACME_SERVER} --acme.email=${LETS_ENCRYPT_EMAIL}   \
      --acme.storage=/acme.json \
      --acme.entrypoint=https \
      --acme.onhostrule  --acme.httpchallenge \
      --acme.httpchallenge.entrypoint=http \
      --retry \
      --loglevel=DEBUG
    restart: unless-stopped
    networks:
      - web
    environment:
      LETS_ENCRYPT_ACME_SERVER: 'https://acme-staging-v02.api.letsencrypt.org/directory'
      LETS_ENCRYPT_EMAIL: andrio1@outlook.co.id
    ports:
      - '80:80'
      - '443:443'
      - '8080:8080'
    volumes:
      - ~/acme.json:/acme.json
      - /var/run/docker.sock:/var/run/docker.sock

  postgres:
    image: postgres:15
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres  # Replace with your desired username
      POSTGRES_PASSWORD: untumukui  # Replace with your desired password
      POSTGRES_DB: postgres  # Replace with your desired database name
   labels:
      - 'traefik.port=5432'
      - 'traefik.enable=true'
      - 'traefik.frontend.rule=Host:auth.smartmoney.bisnisnetz.com}'
      - 'traefik.frontend.entryPoints=https'
      # Security Headers (HSTS)
      - 'traefik.http.middlewares.testHeader.headers.framedeny=true'
      - 'traefik.http.middlewares.testHeader.headers.sslredirect=true'
      # CORS
      - 'traefik.http.middlewares.testheader.headers.accesscontrolallowmethods=GET,OPTIONS,PUT'
      - 'traefik.http.middlewares.testheader.headers.accesscontrolalloworigin=origin-list-or-null'
      - 'traefik.http.middlewares.testheader.headers.accesscontrolmaxage=100'
      - 'traefik.http.middlewares.testheader.headers.addvaryheader=true'
      # Compress (gzip) for Performance
      - 'traefik.http.middlewares.test-compress.compress=true'

  graphql-engine:
    image: hasura/graphql-engine:v2.33.0
    ports:
      - '8081:8080'
    labels:
      - 'traefik.frontend.rule=Host:graphql.smartmoney.bisnisnetz.com'
      - 'traefik.port=8080'
      - 'traefik.http.middlewares.testHeader.headers.framedeny=true'
      - 'traefik.http.middlewares.testHeader.headers.sslredirect=true'
      - 'traefik.http.middlewares.testheader.headers.accesscontrolallowmethods=GET,OPTIONS,PUT'
      - 'traefik.http.middlewares.testheader.headers.accesscontrolalloworigin=origin-list-or-null'
      - 'traefik.http.middlewares.testheader.headers.accesscontrolmaxage=100'
      - 'traefik.http.middlewares.testheader.headers.addvaryheader=true'
      - 'traefik.http.middlewares.test-compress.compress=true'
    depends_on:
      - 'postgres'
    restart: always
    environment:
      HASURA_GRAPHQL_AUTH_HOOK: https://moneysmatrexpense.vercel.app
      HASURA_GRAPHQL_AUTH_HOOK_MODE: GET
      HASURA_GRAPHQL_CORS_DOMAIN: "*"
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:untumukui@smartmoney.biznisnetz.com:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true'
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
    #HASURA_GRAPHQL_ACCESS_KEY: 'your_hasura_access_key'  # Replace with your Hasura access key

volumes:
  db_data:

networks:
  web:
    external: true
    name: traefik_webgateway
